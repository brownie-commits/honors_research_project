begin <- c("May 11, 1996 12:05", "September 12, 2001 1:00", "July 1, 1988 3:32")
end <- c("7/8/97 8:00","10/23/02: 12:00","1/4/91 2:05")
begin <- mdy_hm(begin)
?library
library(lubridate, warn.conflicts = FALSE)
begin <- c("May 11, 1996 12:05", "September 12, 2001 1:00", "July 1, 1988 3:32")
end <- c("7/8/97 8:00","10/23/02: 12:00","1/4/91 2:05")
begin <- mdy_hm(begin)
class(begin)
glimpse(begin)
library(tidyverse, warn.conflicts = FALSE)
glimpse(begin)
begin <- c("May 11, 1996 12:05", "September 12, 2001 1:00", "July 1, 1988 3:32")
end <- c("7/8/97 8:00","10/23/02: 12:00","1/4/91 2:05")
begin <- mdy_hm(begin, tz = "US/Eastern")
begin <- mdy_hm(begin, tz = "US/Central")
begin <- mdy_hm(begin, tz = "US/CST")
OlsonNames()
end <- c("7/8/97","10/23/02","1/4/91")
begin <- c("May 11, 1996", "September 12, 2001", "July 1, 1988")
begin <- mdy(begin, tz = "US/CST")
begin <- mdy(begin)
begin <- c("May 11, 1996", "September 12, 2001", "July 1, 1988")
begin <- mdy(begin)
end <- mdy(end)
getwd()
setwd("~/")
source("C:/Users/brown/Data-Projects/tidy-tuesday/accidents/code/data_cleaning.R")
means <- c(
overall =  daily_accidents %>%
summarise(avg_fatalities = mean(.data$fatalities_count)) %>%
pull(avg_fatalities),
non420 = daily_accidents_420 %>%
filter(.data$e420 == FALSE) %>%
summarise(avg_fatalities = mean(.data$fatalities_count)) %>%
pull(avg_fatalities),
on420 = daily_accidents_420 %>%
filter(.data$e420 == TRUE) %>%
summarise(avg_fatalities = mean(.data$fatalities_count)) %>%
pull(avg_fatalities),
evening = daily_accidents_420_time %>%
filter(.data$d420 == TRUE) %>%
summarise(avg_fatalities = mean(.data$fatalities_count)) %>%
pull(avg_fatalities)
)
print(means)
View(daily_accidents_420_time)
View(daily_accidents_420_time)
View(daily_accidents)
daily_accidents %>%
summarise(
mean = mean(fatalities_count, na.rm = TRUE),
median = median(fatalities_count, na.rm = TRUE),
sd = sd(fatalities_count, na.rm = TRUE),
min = min(fatalities_count, na.rm = TRUE),
max = max(fatalities_count, na.rm = TRUE)
)
daily_accidents_420 %>%
group_by(e420) %>%
summarise(
mean = mean(fatalities_count, na.rm = TRUE),
median = median(fatalities_count, na.rm = TRUE),
sd = sd(fatalities_count, na.rm = TRUE),
n = n()
)
daily_accidents_420_time %>%
group_by(d420) %>%
summarise(
mean = mean(fatalities_count, na.rm = TRUE),
median = median(fatalities_count, na.rm = TRUE),
sd = sd(fatalities_count, na.rm = TRUE),
n = n()
)
library(dplyr)
library(lubridate)
# Join your daily series and flags
df_model <- daily_accidents %>%
left_join(daily_accidents_420, by = "date") %>%
left_join(daily_accidents_420_time, by = "date") %>%
mutate(
dow   = wday(date, label = TRUE),      # day of week
year  = year(date),
month = month(date)
) %>%
replace_na(list(e420 = FALSE, d420 = FALSE))
model_1 <- lm(trstplt ~ stfeco + hincfel + imueclt + prtvtbit + edlvdit + gndr + hinctnta, data = Research_DataESS_Clean)
# 2. Calculate rolling average and plot
daily_accidents_420 %>%
arrange(date) %>%
mutate(
rolling_avg = rollmean(fatalities_count,
k    = 365,        # 7-day window
fill = NA,       # pad start/end with NA
align = "right"  # each avg ends on that day
)
) %>%
ggplot(aes(x = date)) +
# raw daily fatalities
geom_point(aes(y = fatalities_count),
color = "grey50",
alpha = 0.6) +
# 7-day rolling average line
geom_line(aes(y = rolling_avg),
color = "steelblue",
size  = 1) +
labs(
title = "Daily Accident Fatalities with 7-Day Rolling Average",
x     = "Date",
y     = "Fatalities Count"
) +
theme_minimal()
daily_accidents %>%
summarise(
mean = mean(fatalities_count, na.rm = TRUE),
median = median(fatalities_count, na.rm = TRUE),
sd = sd(fatalities_count, na.rm = TRUE),
min = min(fatalities_count, na.rm = TRUE),
max = max(fatalities_count, na.rm = TRUE)
)
daily_accidents_420 %>%
group_by(e420) %>%
summarise(
mean = mean(fatalities_count, na.rm = TRUE),
median = median(fatalities_count, na.rm = TRUE),
sd = sd(fatalities_count, na.rm = TRUE),
n = n()
)
sum_stats <- function(df, group) {
df %>%
group_by({{group}}) %>%
summarise(
mean = mean(fatalities_count, na.rm = TRUE),
median = median(fatalities_count, na.rm = TRUE),
sd = sd(fatalities_count, na.rm = TRUE),
n = n()
)
}
sum_stats(daily_accidents_420, e420)
sum_stats(daily_accidents_420_time, d420)
means <- c(
overall =  daily_accidents %>%
summarise(avg_fatalities = mean(.data$fatalities_count)) %>%
pull(avg_fatalities),
non420 = daily_accidents_420 %>%
filter(.data$e420 == FALSE) %>%
summarise(avg_fatalities = mean(.data$fatalities_count)) %>%
pull(avg_fatalities),
on420 = daily_accidents_420 %>%
filter(.data$e420 == TRUE) %>%
summarise(avg_fatalities = mean(.data$fatalities_count)) %>%
pull(avg_fatalities),
evening = daily_accidents_420_time %>%
filter(.data$d420 == TRUE) %>%
summarise(avg_fatalities = mean(.data$fatalities_count)) %>%
pull(avg_fatalities)
)
print(means)
means <- list(
overall = daily_accidents,
non420 = daily_accidents_420 %>% filter(e420 == FALSE),
on420 = daily_accidents_420 %>% filter(e420 == TRUE),
evening = daily_accidents_420_time %>% filter(d420 == TRUE)
) %>%
map_dbl(~ mean(.x$fatalities_count, na.rm = TRUE))
print(means)
range(all_accidents$timestamp)
View(df_model)
View(daily_accidents_420_time)
View(daily_accidents_420)
daily_accidents_420 %>%
ggplot(aes(x = e420)) %>%
geom_boxplot()
daily_accidents_420 %>%
ggplot(aes(x = e420)) +
geom_boxplot()
daily_accidents_420 %>%
ggplot(aes(x = e420)) +
geom_boxplot(na.rm = TRUE)
daily_accidents_420 %>%
ggplot(aes(x = e420, y = fatalities_count)) +
geom_boxplot(na.rm = TRUE)
daily_accidents_420_time %>%
ggplot(aes(x = d420, y = fatalities_count)) +
geom_boxplot(na.rm = TRUE)
t.test(fatalities_count ~ e420, data = daily_accidents_420)
daily_accidents_420 %>%
geom_density(aes(x = fatalities_count))
daily_accidents_420 %>%
ggplot(aes(x = fatalities_count)) +
geom_density()
?var.test()
bartlett.test(fatalities_count ~ e420, data = daily_accidents_420)
daily_accidents_420 %>%
group_by(e420) %>%
summarise(variance = var(fatalities_count, na.rm = TRUE))
ggplot(daily_accidents_420, aes(x = e420, y = fatalities_count)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue") +
geom_jitter(width = 0.2, alpha = 0.5, color = "darkblue") +
labs(
title = "Fatalities by 4/20 Status",
subtitle = "Boxplot with jittered points to show variance",
x = "Is 4/20?",
y = "Daily Fatalities"
) +
theme_minimal()
daily_accidents_420 %>%
ggplot(aes(x = fatalities_count)) +
geom_density()
source("C:/Users/brown/Data-Projects/honors-research-project/code/01_clean.R")
source("C:/Users/brown/Data-Projects/honors-research-project/code/00_utils_cleaning.R")
source("C:/Users/brown/Data-Projects/honors-research-project/code/01_clean.R")
setwd("C:/Users/brown/Data-Projects/honors-research-project")
source("C:/Users/brown/Data-Projects/honors-research-project/code/01_clean.R")
source("C:/Users/brown/Data-Projects/honors-research-project/code/01_clean.R")
source("C:/Users/brown/Data-Projects/honors-research-project/code/01_clean.R")
source("C:/Users/brown/Data-Projects/honors-research-project/code/01_clean.R")
source("C:/Users/brown/Data-Projects/honors-research-project/code/01_clean.R")
source("C:/Users/brown/Data-Projects/honors-research-project/code/01_clean.R")
source("C:/Users/brown/Data-Projects/honors-research-project/code/01_clean.R")
getwd
getwd()
