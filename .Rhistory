summarise(avg_delay = median(ArrDelay, na.rm = TRUE))
as_as_subset <- sub_airline %>%
select(ArrDelay, Reporting_Airline) %>%
filter(Reporting_Airline == 'AA' | Reporting_Airline == 'AS')
glimpse(as_as_subset)
ad_aov <- aov(ArrDelay ~ Reporting_Airline, data = as_as_subset)
summary(ad_aov)
?aov
sub_airline %>%
ggplot(aes(ArrDelay, ArrDelayMinutes)) +
geom_point() +
geom_smooth(method = 'lm')
sub_airline %>%
ggplot(aes(DepDelayMinutes, ArrDelayMinutes)) +
geom_point() +
geom_smooth(method = 'lm')
sub_airline %>%
ggplot(aes(WeatherDelay, ArrDelayMinutes)) +
geom_point(na.rm = TRUE) +
geom_smooth(method = 'lm',
na.rm = TRUE)
?cor
sub_airline %>%
select(DepDelay, ArrDelay) %>%
cor(method = "pearson")
sub_airline %>%
select(DepDelay, ArrDelay) %>%
cor.test(~DepDelay + ArrDelay, data = .)
install.packages("Hmisc")
library(Hmisc)
numerics_airline <- sub_airline %>%
select(ArrDelayMinutes, DepDelayMinutes,
CarrierDelay, WeatherDelay, NASDelay,
SecurityDelay, LateAircraftDelay)
airlines_cor <- rcorr(as.matrix(numerics_airline),
type = "pearson")
source("C:/R/AnalyzingDatainR.R", echo=TRUE)
aa_delays <- sub_airline %>%
filter(CarrierDelay != "NA",
Reporting_Airline == "AA")
aa_linear_model <- lm(ArrDelayMinutes ~ DepDelayMinutes, data = aa_delays)
summary(aa_linear_model)
new_depdelay <- data.frame(DepDelayMinutes = c(12, 19, 24))
pred <- predict(aa_linear_model, newdata = new_depdelay, interval = "confidence")
print(pred)
mlr <- lm(ArrDelayMinites ~ CarrierDelay + LateAircraft_Delay,
data = aa_delays)
mlr <- lm(ArrDelayMinites ~ CarrierDelay + LateAircraftDelay,
data = aa_delays)
mlr <- lm(ArrDelayMinutes ~ CarrierDelay + LateAircraftDelay,
data = aa_delays)
summary(mlr)
aa_delays %>%
ggplot(aes(DepDelayMinutes, ArrDelayMinutes)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
linear_model <- lm(ArrDelayMinutes ~ DepDelayMinutes,
data = aa_delays)
plot(linear_model)
aa_delays <- predict(linear_model)
aa_delays %>%
ggplot(aes(DepDelayMinutes, ArrDelayMinutes)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(aes(y = predicted), color = "green")
aa_delays %>%
ggplot(aes(DepDelayMinutes, ArrDelayMinutes)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(aes(y = predicted), color = "green") +
geom_segment(aes(xend = DepDelayMinutes, yend = predicted), alpha = .2)
aa_delays$predicted <- predict(linear_model)
aa_delays <- sub_airline %>%
filter(CarrierDelay != "NA",
Reporting_Airline == "AA")
aa_delays$predicted <- predict(linear_model)
aa_delays %>%
ggplot(aes(DepDelayMinutes, ArrDelayMinutes)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
geom_point(aes(y = predicted), color = "green") +
geom_segment(aes(xend = DepDelayMinutes, yend = predicted), alpha = .2)
glimpse(aa_delays$predicted)
view(aa_delays)
datasets()
starwars
library(tidyverse)
band_members
band_members %>% inner_join(band_instruments)
library(tidyverse)
band_members %>% inner_join(band_instruments)
view(band_members)
view(band_instruments)
band_members %>% left_join(band)
band_members %>% left_join(band_instruments)
view(band_instruments)
view(band_instruments)
view(band_instruments2)
band_members %>% inner_join(band_instruments2, by = join_by(name == artist))
airlines <- read_csv("airline_2m.csv",
col_types = cols(
'DivDistance' = col_number(),
'Div1Airport' = col_character(),
'Div1AirportID' = col_character(),
'Div1AirportSeqID' = col_character(),
'Div1WheelsOn' = col_character(),
'Div1TotalGTime' = col_number(),
'Div1LongestGTime' = col_number(),
'DivReachedDest' = col_number(),
'DivActualElapsedTime' = col_number(),
'DivArrDelay' = col_number(),
'Div1WheelsOff'= col_character(),
'Div1TailNum' = col_character(),
'Div2Airport' = col_character(),
'Div2AirportID' = col_character(),
'Div2AirportSeqID' = col_character(),
'Div2WheelsOn' = col_character(),
'Div2TotalGTime' = col_number(),
'Div2LongestGTime' = col_number(),
'Div2WheelsOff' = col_character(),
'Div2TailNum' = col_character()
))
sub_airline <- airlines %>%
filter(Origin == "LAX", Dest == "JFK",
Cancelled !=1, Diverted != 1) %>%
select(Month, DayOfWeek, FlightDate, Reporting_Airline, Origin, Dest,
CRSDepTime, CRSArrTime, DepTime,
ArrTime, ArrDelay, ArrDelayMinutes,
CarrierDelay, WeatherDelay, NASDelay,
SecurityDelay, LateAircraftDelay, DepDelay,
DepDelayMinutes, DivDistance, DivArrDelay)
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity")
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme_scientific()
library(extrafont)
install.packages(extrafont)
install.packages("extrafont")
library(extrafont)
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme_minimal(text = element_text(family = "serif"))
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme(text = element_text(family = "serif")) +
theme_minimal()
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme(text = element_text(family = "arial")) +
theme_minimal()
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme(text = element_text(family = "Times")) +
theme_minimal()
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme(text = element_text(family = "Calibri")) +
theme_minimal()
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme(text = element_text(family = "Calibri"))
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme(text = element_text(family = "Calibri")) +
theme_bw()
font_import(prompt = FALSE)
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme(text = element_text(family = "Calibri")) +
theme_bw()
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme(text = element_text(family = "Times")) +
theme_bw()
loadfonts(device = "all")
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme(text = element_text(family = "Times")) +
theme_bw()
myFont <- "Times"
windowFonts(mono = myFont)
loadfonts(device = "win")
sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme(text = element_text(family = "Times New Roman")) +
theme_bw()
ggsave("test.png", test)
ggsave("test.png")
test <- sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme(text = element_text(family = "Comic Sans MS"))
ggsave("test.png")
test <- sub_airline %>%
filter(Reporting_Airline == "AA") %>%
group_by(DayOfWeek) %>%
summarise(mean_delays = mean(ArrDelayMinutes)) %>%
ggplot(aes(x = DayOfWeek, y = mean_delays)) +
geom_bar(stat = "identity") +
theme(text = element_text(family = "Segoe UI"))
ggsave("test.png")
install.packages(c("igraph", "netrankr"))
devtools::install_github("schochastics/networkdata")
library(devtools)
install.packages("devtools")
library(devtools)
devtools::install_github("schochastics/networkdata")
# adjacency matrix
A <- matrix(c(0,1,1,1,0,1,1,1,0),nrow = 3,ncol = 3,byrow = TRUE)
rownames(A) <- colnames(A) <- c("Bob","Ann","Steve")
A
el <- matrix(c("Bob","Ann","Bob","Steve","Ann","Steve"),
nrow = 3,ncol = 2, byrow = TRUE)
el
g1 <- graph_from_adjacency_matrix(A, mode = "undirected", diag = FALSE)
g2 <- graph_from_edgelist(el,directed = FALSE)
library(igraph)
library(netrankr)
library(networkdata)
g1 <- graph_from_adjacency_matrix(A, mode = "undirected", diag = FALSE)
g2 <- graph_from_edgelist(el,directed = FALSE)
g1
data("greys")
greys
c(
graph.density(graph.empty(10)),
graph.density(greys),
graph.density(graph.full(10))
)
shortest_paths(greys, from = "Alex Karev", to = "Owen Hunt", output = "vpath")
install.packages("tidygraph")
library(tidyverse)
data("flo_marriage")
flo_tidy <- as_tbl_graph(flo_marriage)
flo_tidy
library(networkdata)
flo_tidy <- as_tbl_graph(flo_marriage)
library(tidygraph)
flo_tidy <- as_tbl_graph(flo_marriage)
flo_tidy
# Load the tidyverse package
library(tidyverse)
# Assuming df1 and df2 are your datasets
df1 <- data.frame(id = c(1, 2, 3), sender = c("Alice", "Bob", "Charlie"))
df2 <- data.frame(code = c(1, 2, 3), receiver = c("Dave", "Eve", "Frank"))
# Perform the inner join
joined_df <- df1 %>%
inner_join(df2, by = c("id" = "code"))
print(joined_df)
# Load the tidygraph and ggraph packages
library(tidygraph)
library(ggraph)
install.packages("ggraph")
library(ggraph)
# Convert the joined dataframe to a tbl_graph object
graph <- as_tbl_graph(joined_df, directed = TRUE, node_key = "sender")
# Plot the graph
ggraph(graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1.5, hjust = 1.5)
view(graph)
print(graph)
library(igraph)
# tidyverse
library(tidyverse)
library(tidygraph)
Source <- c("John","Amy","Eviatar","Zoe","Zoe","Maliq","Charles")
Target <- c("Maliq","Allison","Zoe","Amy","Allison","Charles","John")
source
view(Source)
# Join the variables to create a data frame
edgelist <- data.frame(Source,Target)
edgelist
my_edgelist<-graph.data.frame(edgelist)
my_edgelist<-graph_from_data.frame(edgelist)
my_edgelist<-graph_from_data_frame(edgelist)
plot(my_edgelist)
plot(graph,
layout = layout,
vertex.label = NA, # Hide node labels (optional)
vertex.color = "lightblue",
edge.width = 2,
edge.color = "black",
background = "gray90",
main = "My Network",
caption = "Source: Your Data")
plot(graph,
layout = layout,
vertex.label = NA, # Hide node labels (optional)
vertex.color = "lightblue",
edge.width = 2,
edge.color = "black",
background = "gray90",
main = "My Network",
caption = "Source: Your Data")
ggraph(graph, layout = "fr") + geom_edge_link(arrow = arrow(length = unit(4, 'mm')), color = "blue", end_cap = circle(3, 'mm')) + geom_node_point(size = 5, color = "red") + geom_node_text(aes(label = name), vjust = 1.5, hjust = 1.5, color = "white") + theme_minimal() + ggtitle("Social Network Analysis") + labs(caption = "Analysis of messages sent and received") + theme(plot.background = element_rect(fill = "black"), panel.background = element_rect(fill = "black"), plot.title = element_text(hjust = 0.5, color = "white"), plot.caption = element_text(hjust = 0.5, color = "white"))
plot(graph,
layout = layout,
vertex.label = NA, # Hide node labels (optional)
vertex.color = "lightblue",
edge.width = 4,
edge.color = "black",
background = "gray90",
main = "My Network",
caption = "Source: Your Data")
2
plot(graph,
layout = layout,
vertex.label = NA, # Hide node labels (optional)
vertex.color = "lightblue",
edge.width = 2,
edge.color = "black",
background = "gray90",
main = "My Network",
caption = "Source: Your Data")
ggraph(graph, layout = "fr") +
geom_edge_link(arrow = arrow(length = unit(4, 'mm')),
color = "blue",
end_cap = circle(3, 'mm')) +
geom_node_point(size = 5, color = "red") +
geom_node_text(aes(label = name),
vjust = 1.5,
hjust = 1.5,
color = "white") +
theme_minimal() +
ggtitle("Social Network Analysis") +
labs(caption = "Analysis of messages sent and received") +
theme(plot.background = element_rect(fill = "grey"),
panel.background = element_rect(fill = "black"),
plot.title = element_text(hjust = 0.5, color = "white"),
plot.caption = element_text(hjust = 0.5, color = "white"))
getwd()
install.packages("ggflags", repos = c(
"https://jimjam-slam.r-universe.dev",
"https://cloud.r-project.org"))
library(ggflags)
library(tidyverse)
set.seed(1234)
d <- data.frame(
x = rnorm(50), y = rnorm(50),
country = sample(c("ar", "fr", "nz", "gb", "es", "ca", "lv", "qa"), 50, TRUE),
stringsAsFactors = FALSE
)
ggplot(d, aes(x = x, y = y, country = country, size = x)) +
geom_flag() +
scale_country() +
scale_size(range = c(0, 15))
# create a dataset
specie <- c(rep("sorgho" , 3) , rep("poacee" , 3) , rep("banana" , 3) , rep("triticum" , 3) )
condition <- rep(c("normal" , "stress" , "Nitrogen") , 4)
value <- abs(rnorm(12 , 0 , 15))
data <- data.frame(specie,condition,value)
# Grouped
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="dodge", stat="identity")
view(condition)
view(specie)
view(value)
view(data)
# create a dataset
team <- c(kc, philly, nyc, sf, gb, mia, cle, den)
# create a dataset
team <- c('kc', 'philly', 'nyc', 'sf', 'gb', 'mia', 'cle', 'den')
conference <- c('afc', 'nfc', 'afc', 'nfc', 'nfc', 'afc', 'afc', 'afc')
value <- c(96, 94, 65, 74, 79, 69, 51, 72)
data <- data.frame(team,conference,value)
# Grouped
ggplot(data, aes(fill=team, y=value, x=conference)) +
geom_bar(position="dodge", stat="identity")
setwd("~/")
getwd
getwd()
setwd("C:\honors_research_project")
setwd(C:\honors_research_project)
setwd(/C:/honors_research_project)
setwd(~/honors_research_project)
setwd(~\honors_research_project)
setwd("C:/honors_research_project")
getwd()
library(tidyverse)
library(haven)
library(car)
# Load ANES 2016 data into R #
Research_DataANES <- read_dta("C:/Users/brown/Downloads/Research_DataANES.dta")
View(Research_DataANES)
# poltrst -> rpoltrst#
Research_DataANES$poltrst <- ifelse(Research_DataANES$V161215 %in% c(-8, -9), NA, Research_DataANES$V161215)
# Reversing Likert Scale #
Research_DataANES$rpoltrst <- recode(Research_DataANES$poltrst, '1 = 5; 2 = 4; 5 = 1; 4 = 2')
table(Research_DataANES$rpoltrst)
# strglead #
table(Research_DataANES$V162263)
Research_DataANES$strglead <- ifelse(Research_DataANES$V162263 %in% c(-6, -7, -8, -9), NA, Research_DataANES$V162263)
table(Research_DataANES$strglead)
Research_DataANES$rstrglead <- recode(Research_DataANES$strglead, '1 = 5; 2 = 4; 5 = 1; 4 = 2')
table(Research_DataANES$rstrglead)
# pprule #
table(Research_DataANES$V162264)
Research_DataANES$pplrule <- ifelse(Research_DataANES$V162264 %in% c(-6, -7, -8, -9), NA, Research_DataANES$V162264)
table(Research_DataANES$pplrule)
# econcond -> reconcond#
table(Research_DataANES$V161140x)
Research_DataANES$econcond <- ifelse(Research_DataANES$V161140x %in% c(-1), NA, Research_DataANES$V161140x)
table(Research_DataANES$econcond)
Research_DataANES$reconcond <- recode(Research_DataANES$econcond, '1 = 5; 2 = 4; 5 = 1; 4 = 2')
table(Research_DataANES$reconcond)
# finsit -> rfinsit #
table(Research_DataANES$V162165)
Research_DataANES$finsit <- ifelse(Research_DataANES$V162165 %in% c(-6, -7, -8, -9), NA, Research_DataANES$V162165)
table(Research_DataANES$finsit)
Research_DataANES$rfinsit <- recode(Research_DataANES$finsit, '1 = 5; 2 = 4; 5 = 1; 4 = 2')
table(Research_DataANES$rfinsit)
# imharm #
table(Research_DataANES$V162269)
Research_DataANES$imharm <- ifelse(Research_DataANES$V162269 %in% c(-6, -7, -8, -9), NA, Research_DataANES$V162269)
table(Research_DataANES$imharm)
# imecon #
table(Research_DataANES$V162268)
Research_DataANES$imecon <- ifelse(Research_DataANES$V162268 %in% c(-6, -7, -8, -9), NA, Research_DataANES$V162268)
table(Research_DataANES$imecon)
# imempl #
table(Research_DataANES$V162158)
Research_DataANES$imempl <- ifelse(Research_DataANES$V162158 %in% c(-6, -7, -8, -9), NA, Research_DataANES$V162158)
table(Research_DataANES$imempl)
# votechoice -> cvotechoice#
table(Research_DataANES$V162034a)
Research_DataANES$votechoice <- ifelse(Research_DataANES$V162034a %in% c(-1, 3, 4, 5, 7, 9, -6, -7, -8, -9), NA, Research_DataANES$V162034a)
Research_DataANES$cvotechoice <- recode(Research_DataANES$votechoice, '1 = 0; 2 = 1')
table(Research_DataANES$cvotechoice)
# income #
table(Research_DataANES$V161361x)
Research_DataANES$income <- ifelse(Research_DataANES$V161361x %in% c(-5, -9), NA, Research_DataANES$V161361x)
table(Research_DataANES$income)
# gender -> cgender #
table(Research_DataANES$V161342)
Research_DataANES$gender <- ifelse(Research_DataANES$V161342 %in% c(3, -9), NA, Research_DataANES$V161342)
Research_DataANES$cgender <- recode(Research_DataANES$gender, '2 = 0')
table(Research_DataANES$cgender)
# race -> crace #
table(Research_DataANES$V161310x)
Research_DataANES$race <- ifelse(Research_DataANES$V161310x %in% c(-9), NA, Research_DataANES$V161310x)
Research_DataANES$crace <- recode(Research_DataANES$race, '2 = 0; 3 = 0; 4 = 0; 5 = 0; 6 = 0')
table(Research_DataANES$crace)
# edulevel #
table(Research_DataANES$V161270)
Research_DataANES$edulevel <- ifelse(Research_DataANES$V161270 %in% c(-9, 90, 95), NA, Research_DataANES$V161270)
table(Research_DataANES$edulevel)
?table
glimpse(Research_DataANES)
Research_DataANES <- Research_DataANES %>%
select(poltrst, rpoltrst, strglead, pplrule, econcond, reconcond, finsit, rfinsit, imharm, imecon, imempl,
cvotechoice, income, gender, cgender, race, crace, edulevel)
glimpse(Research_DataANES)
table(Research_DataANES$poltrst, Research_DataANES$econcond)
table(Research_DataANES$poltrst, Research_DataANES$finsit)
